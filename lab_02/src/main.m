pkg load statistics

function mu_low = get_mu_low(n, mu, s2, gamma)
  mu_low = mu - sqrt(s2) * tinv((1 + gamma) / 2, n - 1) / sqrt(n);
end

function mu_high = get_mu_high(n, mu, s2, gamma)
  mu_high = mu + sqrt(s2) * tinv((1 + gamma) / 2, n - 1) / sqrt(n);
end

function s2_low = get_s2_low(n, s2, gamma)
  s2_low = ((n - 1) * s2) / chi2inv((1 + gamma) / 2, n - 1);
end

function s2_high = get_s2_high(n, s2, gamma)
  s2_high = ((n - 1) * s2) / chi2inv((1 - gamma) / 2, n - 1);
end

X = [-0.68, 0.71, 2.27, 0.38, 0.14, 0.06, 1.21, -0.59, 0.44, 1.98, 1.00, ...
            - 0.88, -0.08, 1.87, -0.74, 0.83, -1.45, 0.58, 0.48, 3.26, 0.02, 0.26, ...
            2.96, 1.78, 0.58, 0.08, -1.60, 1.26, 1.28, -0.36, 0.15, -0.38, -1.04, ...
            0.95, -2.17, -0.30, 1.09, 0.39, 1.06, 0.98, -2.55, 2.62, -1.58, 3.75, ...
            -1.43, 0.92, 2.75, -0.55, 1.48, -0.96, 0.50, 2.67, -0.58, 0.41, -0.46, ...
            -0.48, 1.68, -0.08, 1.76, 0.08, -1.15, 0.66, 1.54, 0.17, -0.20, 1.34, ...
            1.08, 1.59, -0.05, 0.15, -0.35, 0.58, -0.87, 1.73, -0.27, 0.00, -0.67, ...
            0.13, 1.75, -0.59, 1.31, 1.20, 0.53, 0.14, -0.35, 1.00, -0.01, 0.21, ...
            1.58, -0.02, 1.28, 1.34, -1.66, 0.30, 0.08, 0.66, -0.26, 1.54, 1.22, ...
            1.24, 0.11, 0.79, -0.83, 1.41, 0.17, 0.55, 1.60, 1.26, 1.06, 0.39, ...
            -0.77, 1.49, 0.92, -1.58, 1.19, 0.13, 0.26, -2.14, 0.08, -1.75];

y = 0.9;
gamma = 1 - y;
N = length(X);

% Точечная оценка мат. ожидания
mu = mean(X);
% Смещённая оценка дисперсии
sigma2 = var(X);
% Исправленная оценка дисперсии
S2 = N / (N - 1) * sigma2;

% Нижняя граница доверительного интервала для мат. ожидания
mu_low = get_mu_low(N, mu, S2, gamma);

% Верхняя граница доверительного интервала для мат. ожидания
mu_high = get_mu_high(N, mu, S2, gamma);

% Нижняя граница доверительного интервала для дисперсии
s2_low = get_s2_low(N, S2, gamma);
% Верхняя граница доверительного интервала для дисперсии
s2_high = get_s2_high(N, S2, gamma);

% Вывод полученных ранее значений
fprintf('Доверительный интервал уровня = %.2f\n', y); 
fprintf('a) Точечная оценка математического ожидания = %.3f\n', mu);
fprintf('   Точечная оценка дисперсии (смещенная) = %.3f\n', sigma2);
fprintf('   Точечная оценка дисперсии (исправленная) = %.3f\n', S2);
    
fprintf('б) Нижняя граница доверительного интервала для математического ожидания = %.3f\n', mu_low);
fprintf('   Верхняя граница доверительного интервала для математического ожидания = %.3f\n', mu_high);
    
fprintf('в) Нижняя граница доверительного интервала для дисперсии = %.3f\n', s2_low);
fprintf('   Верхняя граница доверительного интервала для дисперсии = %.3f\n', s2_high);

% Создание массивов точечных оценок
mus = zeros(1, N);
s2s = zeros(1, N);

% Создание массивов границ доверительных интервалов
mus_low = zeros(1, N);
mus_high = zeros(1, N);
s2s_low = zeros(1, N);
s2s_high = zeros(1, N);

for i = 1:N
  mu = mean(X(1:i));
  sigma2 = var(X(1:i));
  
  if (i > 1)
    s2 = i / (i - 1) * sigma2;
  else
    s2 = sigma2;
  endif
  
  % Точечная оценка матожидания
  mus(i) = mu;
        
  % Точечная оценка дисперсии
  s2s(i) = s2;
  % Нижняя граница доверительного интервала для матожидания
  mus_low(i) = get_mu_low(i, mu, s2, gamma);
  % Верхняя граница доверительного интервала для матожидания
  mus_high(i) = get_mu_high(i, mu, s2, gamma);
  % Нижняя граница доверительного интервала для дисперсии
  s2s_low(i) = get_s2_low(i, s2, gamma);
  % Верхняя граница доверительного интервала для дисперсии
  s2s_high(i) = get_s2_high(i, s2, gamma);
end

% Построение графиков
plot(1:N, [(zeros(1, N) + mu)', mus', mus_low', mus_high']);
set(gca, "fontsize", 16)
grid on;
xlabel('n');
ylabel('y');

legend('Общая точечная оценка \mu(x_N)', 'Текущая точечная оценка \mu(x_N)', 'Верхняя граница ДО \mu', ...
        'Нижняя граница ДО \mu');

set(gca, "ylim", [-5, 6]);
print -djpg g-1.jpg

figure;
plot(1:N, [(zeros(1, N) + s2)', s2s', s2s_low', s2s_high']);
set(gca, "fontsize", 16)
grid on;
xlabel('n');
ylabel('z');
legend('Общая точечная оценка S^2(x_N)', 'Текущая точечная оценка S^2(x_N)', 'верхняя граница ДО \sigma', ...
            'нижняя граница ДО \sigma');
print mus_low;
print mus_high;
set(gca, "ylim",[-5, 15]);
print -djpg g2-2.jpg

